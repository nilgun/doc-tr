<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 9e0f03ac354d797d1d16c0fcc1663e5e170f2727 Maintainer: nilgun Status: ready -->
<!-- CREDITS: faruk -->
<refentry xml:id="function.array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array</refname>
  <refpurpose>Bir dizi oluşturur</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array</methodname>
  <methodparam rep="repeat"><type>mixed</type><parameter>değerler</parameter></methodparam>
  </methodsynopsis>
  <para>
   Bir dizi oluşturur. Diziler hakkında ayrıntılı bilgi edinmek için
   <link linkend="language.types.array">array</link> türünün belgesine bakınız.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>değerler</parameter></term>
     <listitem>
      <para>
       Burada, "indis =&gt; değerler", sözdizimi virgüllerle ayrılarak indis ve
       değerler tanımlanır. İndis <type>string</type> veya <type>int</type>
       türünde olabilir. İndis belirtilmezse 0'dan başlamak üzere otomatik
       olarak üretilir. İndis olarak bir tamsayı belirtilirse üretilecek sonraki
       indis, indis + 1 olacaktır. Eğer birbirinin aynı iki indis belirtilirse
       sonuncusu öncekini geçersiz kılar.
      </para>
      <para>
       Son tanımlanan dizi elemanından sonra bir virgül konursa, yararsız
       olmakla beraber sözdizimsel olarak geçerlidir.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Değiştirgelerle tanımlanan diziyi döndürür. Değiştirgelerde
   <literal>=&gt;</literal> işleci ile bir indis belirtilebilir. Diziler
   hakkında daha ayrıntılı bilgi için <link linkend="language.types.array">
   array</link> türünün belgesine bakınız.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Aşağıdaki örnekte iki boyutlu bir dizinin nasıl oluşturulduğu, ilişkisel
   bir dizide anahtarların nasıl belirtildiği ve normal dizilerde sayısal
   indislerin nasıl atlanarak devam edileceği gösterilmiştir.
   <example>
    <title>- <function>array</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
$fruits = array (
    "meyveler"  => array("a" => "portakal", "b" => "muz", "c" => "elma"),
    "numaralar" => array(1, 2, 3, 4, 5, 6),
    "delikler"   => array("ilk", 5 => "ikinci", "üçüncü")
);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>array</function> ile otomatik indis üretimi</title>
    <programlisting role="php">
<![CDATA[
<?php
$array = array(1, 1, 1, 1,  1, 8 => 1,  4 => 1, 19, 3 => 13);
print_r($array);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Array
(
    [0] => 1
    [1] => 1
    [2] => 1
    [3] => 13
    [4] => 1
    [8] => 1
    [9] => 19
)
]]>
    </screen>
   </example>
  </para>
  <para>
   Dikkat ederseniz, '3' indisi iki kere tanımlandı. Ancak son değer olan
   13 saklandı. 4 indisi 8 indisinden sonra tanımlandı ve en büyük indis 8
   olduğundan ondan sonra üretilen indis 9 oldu.
  </para>
  <para>
   Bu örnek 1 indisinden başlayan bir dizi oluşturuyor.
   <example>
    <title>- İlk indisi 1 olan dizi üretimi</title>
    <programlisting role="php">
<![CDATA[
<?php
$firstquarter = array(1 => 'January', 'February', 'March');
print_r($firstquarter);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [1] => January
    [2] => February
    [3] => March
)
]]>
    </screen>
   </example>
  </para>
  <para>
   Perl'de olduğu gibi çift tırnak içine alınmış bir dizi içindeki bir değere
   erişebilirsiniz. Ancak PHP'de diziyi kaşlı ayraçlar arasına almak zorunda
   değilsiniz.
   <example>
    <title>- Çift tırnak içine alınmış bir diziye erişim</title>
    <programlisting role="php">
<![CDATA[
<?php

$foo = array('bar' => 'baz');
echo "Hello {$foo['bar']}!"; // Çıktısı: Hello baz!

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <para>
   <note>
    <para>
     <function>array</function> normal bir işlev değil, dizileri
     birebir göstermekte kullanılan bir dil oluşumudur.
    </para>
   </note>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_pad</function></member>
    <member><function>list</function></member>
    <member><function>count</function></member>
    <member><function>range</function></member>
    <member>&foreach;</member>
    <member><link linkend="language.types.array">array</link> türü</member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
