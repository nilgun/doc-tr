<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 86e6094e86b84a51d00ab217ac50ce8dde33d82a Maintainer: haluk Status: ready -->
<section xml:id="intl.collator-constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 <para>
  <variablelist>
   <varlistentry xml:id="collator.constants.french-collation">
    <term>
     <constant>Collator::FRENCH_COLLATION</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Dizgenin geri planındaki farklı aksanlara göre dizgeleri sıralar. Bu
      öznitelik Fransızca yerellerde ve bir kaç başka yerelde otomatik
      olarak etkindir. Kullanıcılar normalde bu özniteliği açıkça
      etkinleştirme ihtiyacı duymazlar. Bu özniteliğe <emphasis>On</emphasis>
      değeri atamanın başarım açısından bir bedeli vardır fakat sıralama
      anahtarının uzunluğu tesirsizdir. Olası değerler şunlardır:
      <simplelist>
       <member><constant>Collator::ON</constant></member>
       <member><constant>Collator::OFF</constant>(öntanımlı)</member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
     <para>
      <example>
       <title>- FRENCH_COLLATION kuralları</title>
       <para>
        <simplelist>
         <member>F=OFF cote &lt; coté &lt; côte &lt; côté </member>
         <member>F=ON cote &lt; côte &lt; coté &lt; côté</member>
        </simplelist>
       </para>
      </example>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.alternate-handling">
    <term>
     <constant>Collator::ALTERNATE_HANDLING</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      <literal>Alternate</literal> özniteliği, UCA'da değişken karakterler
      denen karakterleri (boşluk karakterleri, noktalama imleri ve simgeler)
      denetim altında tutmak için kullanılır. Eğer bu özniteliğe
      <literal>NonIgnorable</literal> (N) değeri atanırsa bu karakterler
      arasındaki farklar harfler arasındaki farklarla aynı önemdedir. Eğer
      <literal>Shifted</literal> (S) atanırsa bu karakterler çok düşük
      önemde olurlar. <literal>Shifted</literal> değeri çoğunlukla
      <emphasis>Strength</emphasis> (etki seviyesi) ile birlikte Dördüncüllüğü
      (<literal>Quaternary</literal>) belirtmekte kullanılır. Böyle bir
      durumda, boşluk karakterleri, noktalama imleri ve simgelerin dizgeleri
      karşılaştırırken hesaba katılabilmesi için dizgelerin tüm diğer şeyler
      (temel harfler, aksanlar ve harf büyüklüğü) bakımından eşdeğer olmaları
      gerekir. Eğer özniteliğe <literal>Shifted</literal> atanmazsa üçüncül
      (<literal>Tertiary</literal>) ve dördüncül
      (<literal>Quaternary</literal>) etki seviyeleri arasında hiçbir fark
      yoktur. Daha fazla bilgi ve örnekler için
      <link xlink:href="&url.icu.uca;">UCA</link>
      sitesindeki "Variable_Weighting" konusuna bakınız. Özniteliğin
      değerlerinin basitçe <literal>On</literal> ve <literal>Off</literal>
      olmamasının sebebi gelecekte başka değerlerin eklenebilecek olmasıdır.
      UCA seçeneği <literal>Blanked</literal> üçüncül etki seviyesi ile ifade
      edilir ve özniteliğe <literal>Shifted</literal> atanır. Çoğu yerel için
      <literal>NonIgnorable</literal> öntanımlıdır. Eğer
      <literal>Shifted</literal> seçilirse ve noktalama dışında birbirinin
      aynı çok sayıda dizge varsa işlem daha yavaş olabilir; etki seviyesi
      ayrıca arttırılmadıkça sıralama anahtarı uzunluğu tesirsiz olacaktır.
     </para>
     <para>
      Olası değerler:
      <simplelist>
       <member><constant>Collator::NON_IGNORABLE</constant>(öntanımlı)</member>
       <member><constant>Collator::SHIFTED</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
     <para>
      <example>
       <title>- ALTERNATE_HANDLING kuralları</title>
       <para>
        <simplelist>
         <member>
         S=3, A=N di Silva &lt; Di Silva &lt; diSilva &lt; U.S.A. &lt; USA
         </member>
         <member>
         S=3, A=S di Silva = diSilva &lt; Di Silva &lt; U.S.A. = USA
         </member>
         <member>
         S=4, A=S di Silva &lt; diSilva &lt; Di Silva &lt; U.S.A. &lt; USA
         </member>
        </simplelist>
       </para>
      </example>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.case-first">
    <term>
     <constant>Collator::CASE_FIRST</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      <literal>Case_First</literal> özniteliği, dizgeler arasında başka
      farkların olmadığı durumda büyük harflerin küçük harflerden önce mi yoksa
      sonra mı olacağını belirler. Olası değerler, büyük harflerin önce
      geleceğini belirten <literal>Uppercase_First</literal> (U), küçük
      harflerin önce olacağını belirten <literal>Lowercase_First</literal> (L)
      değerlerine ilaveten standart <literal>Default</literal> ve
      <literal>Off</literal> değerleridir. Sonuçları bakımından
      <literal>Off</literal> ve <literal>Lowercase_First</literal> arasında
      hemen hemen hiç fark yoktur. Bu bakımdan kullanıcılar genelde
      <literal>Lowercase_First</literal> kullanmazlar, sadece
      <literal>Off</literal> veya <literal>Uppercase_First</literal>
      kullanırlar. X ve L arasındaki farkların ayrıntıları ile
      ilgilenen kullanıcılar Karşılaştırma Özelleştirmesini incelemelidirler.
      L veya U belirtmenin dizge karşılaştırma başarımında etkisi olmaz, fakat
      sıralama anahtarı uzunluğunu etkiler.
     </para>
     <para>
      Olası değerler:
      <simplelist>
       <member><constant>Collator::OFF</constant>(öntanımlı)</member>
       <member><constant>Collator::LOWER_FIRST</constant></member>
       <member><constant>Collator::UPPER_FIRST</constant></member>
       <member><constant>Collator:DEFAULT</constant></member>
      </simplelist>
     </para>
     <para>
      <example>
       <title>- CASE_FIRST kuralları</title>
       <para>
        <simplelist>
         <member>C=X or C=L "china" &lt; "China" &lt; "denmark" &lt;
         "Denmark"</member>
         <member>C=U "China" &lt; "china" &lt; "Denmark" &lt;
         "denmark"</member>
        </simplelist>
       </para>
      </example>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.case-level">
    <term>
     <constant>Collator::CASE_LEVEL</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      <literal>Case_Level</literal> özniteliği harf büyüklüğünü değil aksanları
      yoksaymak için kullanılır. Böyle bir durumda, etki seviyesine (Strength)
      <literal>Primary</literal> ve <literal>Case_Level</literal> özniteliğine
      <literal>On</literal> atanır. Çoğu yerelde <literal>On</literal>
      öntanımlıdır ve bu değerin küçük bir dizge karşılaştırma başarımı ve
      sıralama anahtarı ektisi vardır.
     </para>
     <para>
      Olası değerler:
      <simplelist>
       <member><constant>Collator::OFF</constant>(öntanımlı)</member>
       <member><constant>Collator::ON</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
     <para>
      <example>
       <title>- CASE_LEVEL kuralları</title>
       <para>
        <simplelist>
         <member>S=1, E=X role = Role = rôle</member>
         <member>S=1, E=O role = rôle &lt; Role</member>
        </simplelist>
       </para>
      </example>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.normalization-mode">
    <term>
     <constant>Collator::NORMALIZATION_MODE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Normalleştirme ayarı, karşılaştırmada metnin tamamen normalleştirilip
      normalleştirilmeyeceğini belirler. Değeri off olsa bile (çoğu yerel için
      öntanımlıdır) ortak kullanımda gösterildiği haliyle metin doğru olarak
      karşılaştırılacaktır (Ayrıntılar için UTN #5'e bakınız). Sadece, meşru
      sırada olmayan aksan imleri sorun çıkarır. Özniteliğe
      <literal>On</literal> atanmışsa, olası tüm metin girdiler için en iyi
      sonuçlar garanti edilir ve normalleştirme gerektiren dizilimlerin
      sıklığına bağlı olarak orta seviyede bir dizge karşılaştırma başarımı
      maliyeti vardır. Sıralama anahtarı uzunluğu üzerinde önemli bir etkisi
      yoktur. Eğer girdi metninin NFD veya NFKD normalleştirme şekillerinden
      birinde olduğu biliniyorsa bu normalleştirme seçeneğini etkin kılmaya
      gerek yoktur.
     </para>
     <para>
      Olası değerler:
      <simplelist>
       <member><constant>Collator::OFF</constant>(öntanımlı)</member>
       <member><constant>Collator::ON</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.strength">
    <term>
     <constant>Collator::STRENGTH</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      ICU Karşılaştırma hizmeti çok seviyeli karşılaştırmayı destekler
      (bunlara seviye (level) dendiği gibi tesir derecesi de (Strength)
      denir). Bu seviyeler sayesinde ICU, dizgeleri yerel uzlaşımlara bağlı
      olarak hassas bir şekilde sıralar. Bununla birlikte, metin içinde dizge
      araması, seviyelerin seçilerek devreye sokulmasına izin verilerek
      çeşitli eşleşme koşullarıyla gerçekleştirilebilir. Daha ayrıntılı bilgi
      edinmek için  <function>collator_set_strength</function> işlevine
      bakınız.
     </para>
     <para>
      Olası değerler:
      <simplelist>
       <member><constant>Collator::PRIMARY</constant></member>
       <member><constant>Collator::SECONDARY</constant></member>
       <member><constant>Collator::TERTIARY</constant>(öntanımlı)</member>
       <member><constant>Collator::QUATERNARY</constant></member>
       <member><constant>Collator::IDENTICAL</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.hiragana-quaternary-mode">
    <term>
     <constant>Collator::HIRAGANA_QUATERNARY_MODE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      JIS x 4061 ile uyumluluk Hiragana ve Katakana karakterler arasında ayrım
      sağlayacak ek seviyeler gerektirir. Eğer standartla uyumluluk gerekirse
      bu özniteliğe <literal>On</literal> atanmalı ve seviye olarak
      Quaternary (dördüncül) kullanılmalıdır. Bu, sıralama anahtarı uzunluğunu
      ve dizge karşılaştırma başarımını etkiler.
     </para>
     <para>
      Olası değerler:
      <simplelist>
       <member><constant>Collator::OFF</constant>(öntanımlı)</member>
       <member><constant>Collator::ON</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.numeric-collation">
    <term>
     <constant>Collator::NUMERIC_COLLATION</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Etkin kılınırsa bu öznitelik, rakamlardan oluşan altdizgelerin sayısal
      değerleri için bir karşılaştırma anahtarı üretir. Bu, sıralamada '2''den
      sonra '100' almanın bir yoludur.
     </para>
     <para>
      Olası değerler:
      <simplelist>
       <member><constant>Collator::OFF</constant>(default)</member>
       <member><constant>Collator::ON</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.default-value">
    <term>
     <constant>Collator::DEFAULT_VALUE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.primary">
    <term>
     <constant>Collator::PRIMARY</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.secondary">
    <term>
     <constant>Collator::SECONDARY</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.tertiary">
    <term>
     <constant>Collator::TERTIARY</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.default-strength">
    <term>
     <constant>Collator::DEFAULT_STRENGTH</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.quaternary">
    <term>
     <constant>Collator::QUATERNARY</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.identical">
    <term>
     <constant>Collator::IDENTICAL</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.off">
    <term>
     <constant>Collator::OFF</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.on">
    <term>
     <constant>Collator::ON</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.shifted">
    <term>
     <constant>Collator::SHIFTED</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.non-ignorable">
    <term>
     <constant>Collator::NON_IGNORABLE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.lower-first">
    <term>
     <constant>Collator::LOWER_FIRST</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.upper-first">
    <term>
     <constant>Collator::UPPER_FIRST</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</section>
