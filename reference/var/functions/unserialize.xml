<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 0c9c2dd669fe9395eaa73d487fbd160f9057429a Maintainer: nilgun Status: ready -->
<refentry xml:id="function.unserialize" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>unserialize</refname>
  <refpurpose>Bir PHP değerini saklanmış gösteriminden oluşturur
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>unserialize</methodname>
   <methodparam><type>string</type><parameter>veri</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>seçenekler</parameter><initializer>[]</initializer></methodparam>
  </methodsynopsis>

  <simpara>
   <function>unserialize</function> işlevi tek bir dizgeleştirilmiş değişken
   alır ve bunu tekrar bir PHP değeri haline getirir.
  </simpara>
  <warning>
   <para>
    <literal>allowed_classes</literal> seçeneğine bakmaksızın işleve
    güvenilmeyen kullanıcı girdisini aktarmayın. Nesneleştirme, nesne
    örnekleme ve otomatik yükleme nedeniyle kodun yüklenmesine ve
    yürütülmesine neden olabilir ve kötü niyetli bir kullanıcı bundan
    yararlanabilir. Kullanıcıya dizeleştirilmiş verileri iletmeniz
    gerekiyorsa JSON (<function>json_decode</function> ve
    <function>json_encode</function>) aracılığıyla) gibi güvenli,
    standart bir veri değişim biçimi kullanın.
   </para>
   <para>
    Harici olarak depolanan dizeleştirilmiş verileri nesneleştirmek gerekirse,
    veri doğrulama için <function>hash_hmac</function> kullanımı düşünülebilir.
    Verilerin sizden başka hiç kimse tarafından değiştirilmediğinden emin olun.
   </para>
  </warning>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
   <variablelist>
    <varlistentry>
     <term><parameter>veri</parameter></term>
     <listitem>
      <para>
       Dizeleştirilmiş değer.
      </para>
      <para>
       Dizeleştirilmiş bir değişkeni bir nesne haline getirmeye çalışırsanız
       PHP nesneyi oluşturduktan sonra otomatik olarak
       <link linkend="object.unserialize">__unserialize()</link> veya
       <link linkend="object.wakeup">__wakeup()</link> üye işlevini (varsa)
       çağıracaktır.
      </para>
       <note>
        <title><link linkend="unserialize-callback-func">
        unserialize_callback_func</link> yönergesi</title>
        <para>
         Nesneleştirme sırasında tanımsız bir sınıf örneklenecekse (eksikli
         bir "__PHP_Incomplete_Class" nesnesinin elde edilmesini engellemek
         için) çağrılmak üzere bir geriçağırım işlevi tanımlamak mümkündür.
         Böyle bir işlevi &php.ini; veya &htaccess; dosyasında <link
         linkend="ini.unserialize-callback-func">unserialize_callback_func</link>
         yönergesinde veya ya da <function>ini_set</function> işlevinde
         belirtebilirsiniz. Bu işlevin her çağrılışında tanımsız bir sınıfın
         örneklenmesi gerekir. Bu özelliği iptal etmek için bu ayarı boş
         bırakmanız yeterlidir.
        </para>
       </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>seçenekler</parameter></term>
     <listitem>
      <para>
       <function>unserialize</function> işlevine aktarılacacak seçenekleri
       içeren ilişkisel bir dizi.
      </para>
      <table>
       <title>Geçerli seçenekler</title>
       <tgroup cols="3">
        <thead>
         <row>
          <entry>İsim</entry>
          <entry>Tür</entry>
          <entry>Açıklama</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry><literal>allowed_classes</literal></entry>
          <entry><type>mixed</type></entry>
          <entry>
           <simpara>
            Üç değerdem biri: Kabul edilmesi gereken sınıf isimleri dizisi,
            hiçbir sınıfı kabul etmemek için &false; ya da tüm sınıfları
            kabul etmek için &true;. Bu seçenek tanımlanırsa ve
            <function>unserialize</function>), kabul edilmeyen bir sınıfla
            karşılaşırsa, bu sınıf yerine
            <classname>__PHP_Incomplete_Class</classname> örneklenecektir.
           </simpara>
           <simpara>
            Bu seçeneğin atlanması, onu &true; olarak tanımlamakla aynıdır:
            PHP, belirtilen sınıfları örneklemeye çalışır.
           </simpara>
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </listitem>
    </varlistentry>
   </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Dönüştürülerek döndürülen değer <type>bool</type>,
   <type>int</type>, <type>float</type>, <type>string</type>,
   <type>array</type> veya <type>object</type> türünde olabilir.
  </para>
  <para>
   Nesneleştirilemeyen bir dizge belirtilmesi durumunda işlev &false; döndürür
   ve bir <constant>E_NOTICE</constant> çıktılar.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Nesneler, kendi nesneleştirme işleyicilerinde <classname>Throwable</classname>
   yavrulayabilir.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.1.0</entry>
       <entry>
        <literal>allowed_classes</literal> seçeneği artık katı türde, yani
        <type>array</type> veya <type>bool</type> türü dışında bir değer
        aktarılırsa <function>unserialize</function> işlevi &false; döndürür ve
        bir <constant>E_WARNING</constant> oluşturur.
       </entry>
      </row>
      <row>
       <entry>7.0.0</entry>
       <entry>
        <parameter>seçenekler</parameter> değiştirgesi eklendi.
       </entry>
      </row>
      <row>
       <entry>5.6.0</entry>
       <entry>
        Kurucuyu çağırmadan nesne örneklemeye zorlamak için
        <literal>C:</literal> ile <literal>O:</literal> yer değiştirilerek
        dizeleştirilmiş verilerin işlenmesi artık başarısız olacaktır.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>unserialize</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
// Burada, oturum verisini $session_data dizisine yüklemek
// için bir veritabanından seçilmiş bir dizgeyi nesneleştireceğiz
// Bu örnek serialize() işlevi örneğinin tamamlayıcısıdır.

$conn = odbc_connect("webdb", "php", "chicken");
$stmt = odbc_prepare($conn, "SELECT data FROM sessions WHERE id = ?");
$sqldata = array($_SERVER['PHP_AUTH_USER']);
if (!odbc_execute($stmt, $sqldata) || !odbc_fetch_into($stmt, $tmp)) {
    // çalıştırma veya alım başarısız olursa boş bir dizi ilklendireceğiz
    $session_data = array();
} else {
    // artık dizgeleştirilmiş veri $tmp[0] içinde.
    $session_data = unserialize($tmp[0]);
    if (!is_array($session_data)) {
        // birşeyler yanlış gitmiş, boş bir dizi ilklendirelim
        $session_data = array();
    }
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>- <link linkend="unserialize-callback-func">
        unserialize_callback_func</link> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
$serialized_object='O:1:"a":1:{s:5:"value";s:3:"100";}';

// kendi geriçağırım işlevimizi belirtelim
ini_set('unserialize_callback_func', 'mycallback');

function mycallback($classname)
{
    // Sınıf tanımınızı içeren bir dosyayı dahil etmeniz yeterlidir
    // Hangi sınıf tanımının gerçekleneceğini $classname değişkenine
    // bakarak saptayacaksınız
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    Hata durumunda veya dizgeleştirilmiş bir &false; değerini nesneleştirmeye
    çalışıyorsanız işlev &false; döndürür. Bu özel durumu
    <parameter>veri</parameter> değiştirgesini
    <literal>serialize(false)</literal> ile karşılaştırarak veya
    <constant>E_NOTICE</constant> çıktısını inceleyerek yakalayabilirsiniz.
   </para>
  </warning>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>json_encode</function></member>
    <member><function>json_decode</function></member>
    <member><function>hash_hmac</function></member>
    <member><function>serialize</function></member>
    <member><link linkend="language.oop5.autoload">Otomatik Yüklenen
    Sınıflar</link></member>
    <member><link linkend="ini.unserialize-callback-func"
    >unserialize_callback_func</link></member>
    <member><link linkend="object.wakeup">__wakeup()</link></member>
    <member><link linkend="object.serialize">__serialize()</link></member>
    <member><link linkend="object.unserialize">__unserialize()</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
