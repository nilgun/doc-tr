<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 86e6094e86b84a51d00ab217ac50ce8dde33d82a Maintainer: nilgun Status: ready -->
<!-- Generated by xml_proto.php v2.1. Found in /scripts directory of phpdoc. -->
<appendix xml:id="pdo.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &extension.constants;
 <warning>
  <para>
   PDO eklentisi, PHP 5.1'den bu yana sınıf sabitlerini kullanmaktadır. Daha
   önceki sürümlerinde <constant>PDO_PARAM_BOOL</constant> biçiminde küresel
   sabitler kullanılır.
  </para>
 </warning>
 <variablelist>
  <varlistentry xml:id="pdo.constants.param-bool">
   <term>
    <constant>PDO::PARAM_BOOL</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Mantıksal veri türünü ifade eder.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-null">
   <term>
    <constant>PDO::PARAM_NULL</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     SQL NULL veri türünü ifade eder.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-int">
   <term>
    <constant>PDO::PARAM_INT</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     SQL INTEGER veri türünü ifade eder.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-str">
   <term>
    <constant>PDO::PARAM_STR</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     SQL CHAR, VARCHAR ve benzeri dizge veri türlerini ifade eder.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-str-natl">
   <term>
    <constant>PDO::PARAM_STR_NATL</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Dizgenin ulusal karakter kümesini kullanacağını belirtir.
    </simpara>
    <simpara>
     PHP 7.2.0'dan beri kullanılabilir.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-str-char">
   <term>
    <constant>PDO::PARAM_STR_CHAR</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Dizgenin normal karakter kümesini kullanacağını belirtir.
    </simpara>
    <simpara>
     PHP 7.2.0'dan beri kullanılabilir.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-lob">
   <term>
    <constant>PDO::PARAM_LOB</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
    SQL büyük nesne veri türünü ifade eder.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-stmt">
   <term>
    <constant>PDO::PARAM_STMT</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Kayıt kümesi (recordset) türünü ifade eder. Her sürücü desteklemez.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-input-output">
   <term>
    <constant>PDO::PARAM_INPUT_OUTPUT</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Değiştirgenin bir saklı yordam için bir girdi/çıktı değiştirgesi olduğunu
     gösterir. Bu değeri bir PDO::PARAM_* veri türü ile bit seviyesinde
     VEYAlamanız gerekir.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-lazy">
   <term>
    <constant>PDO::FETCH_LAZY</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Yöntemin, sonuç kümesindeki her satırı, değişken isimlerinin sütun
     isimlerine karşılık geldiği bir nesne olarak döndüreceğini belirtir.
     <constant>PDO::FETCH_LAZY</constant> sütun isimlerine nesnenin
     değişkenleri olarak erişilebilmesini sağlar.
     <function>PDOStatement::fetchAll</function> içinde geçersizdir.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-assoc">
   <term>
    <constant>PDO::FETCH_ASSOC</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Yöntemin, sonuç kümesindeki her satırının, sütun isimleriyle indislenmiş bir
     dizi olarak döndürüleceğini belirtir. Eğer sonuç kümesi aynı isimde
     birden fazla sütun içeriyorsa her sütun için tek bir değer döner.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-named">
   <term>
    <constant>PDO::FETCH_NAMED</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Yöntemin, sonuç kümesindeki her satırının, sütun isimleriyle indislenmiş bir
     dizi olarak olarak döndüreleceğini belirtir. Eğer sonuç kümesi aynı isimde
     birden fazla sütun içeriyorsa her sütun için bir değerler dizisi döner.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-num">
   <term>
    <constant>PDO::FETCH_NUM</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Yöntemin, sonuç kümesindeki her satırının, sütun numaralarıyla indislenmiş
     bir dizi olarak olarak döndüreleceğini belirtir. İlk sütunun indisi 0'dır.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-both">
   <term>
    <constant>PDO::FETCH_BOTH</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Yöntemin, sonuç kümesindeki her satırının, hem sütun isimleriyle hem de
     sütun numaralarıyla indislenmiş bir dizi olarak olarak döndürüleceğini
     belirtir. İlk sütunun indisi 0'dır.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-obj">
   <term>
    <constant>PDO::FETCH_OBJ</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Yöntemin, sonuç kümesindeki her satırının, özellik isimlerinin sütun
     isimlerine karşılık geldiği bir nesne olarak döndüreceğini belirtir.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-bound">
   <term>
    <constant>PDO::FETCH_BOUND</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Yöntemin, sonuç kümesindeki sütun değerlerini
     <function>PDOStatement::bindParam</function> veya
     <function>PDOStatement::bindColumn</function> yönteminde SQL
     değiştirgeleri ile ilişkilendirilip PHP değişkenlerine atanacağını ve
     &true; döndürüleceğini belirtir.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-column">
   <term>
    <constant>PDO::FETCH_COLUMN</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Yöntemin, sonuç kümesindeki sonraki satırdan istenen tek bir sütunu
     döndüreceğini belirtir.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-class">
   <term>
    <constant>PDO::FETCH_CLASS</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Yöntemin, sınıf özellikleri sütun isimleriyle eşlenerek elde edilen
     sınıfın yeni bir örneğini döndüreceğini belirtir.
    </simpara>
    <note>
     <simpara>
      İstenen sınıf içinde özellik mevcut değilse sihirli
      <link linkend="language.oop5.overloading.members">
      <methodname>__set</methodname></link> yöntemi çağrılır.
     </simpara>
    </note>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-into">
   <term>
    <constant>PDO::FETCH_INTO</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Yöntemin, sınıf özellikleri sütun isimleriyle eşlenerek elde edilen
     sınıfın mevcut bir örneğini güncelleyeceğini belirtir.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-func">
   <term>
    <constant>PDO::FETCH_FUNC</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Verinin anında işlenmesi yoluyla tamamen özelleştirmeye izin verir
     (sadece <function>PDOStatement::fetchAll</function> içinde geçerlidir).
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-group">
   <term>
    <constant>PDO::FETCH_GROUP</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Grup değer olarak döner. Normal olarak
     <constant>PDO::FETCH_COLUMN</constant> veya
     <constant>PDO::FETCH_KEY_PAIR</constant> ile birlikte.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-unique">
   <term>
    <constant>PDO::FETCH_UNIQUE</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Sadece eşsiz değerleri getirir.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-key-pair">
   <term>
    <constant>PDO::FETCH_KEY_PAIR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
      İlk sütunun anahtar diğer sütunların ise birer değer olduğu bir dizi
      döner. PHP 5.2.3'ten beri kullanılabilmektedir.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-classtype">
   <term>
    <constant>PDO::FETCH_CLASSTYPE</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Sütun ismini ilk sütunun değerinden belirler.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-serialize">
   <term>
    <constant>PDO::FETCH_SERIALIZE</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Nesnenin dizgeleştirilmiş olark döndürülmesi dışında
     <constant>PDO::FETCH_INTO</constant> gibidir. PHP 5.1.0'dan beri
     kullanılabilmektedir. PHP 5.3.0'dan beri bu seçenek etkinken sınıf
     kurucusu asla çağrılmamaktadır.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-props-late">
   <term>
    <constant>PDO::FETCH_PROPS_LATE</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Özellikler değiştirilmeden önce kurucuyu çağırır. PHP 5.2.0'dan beri
     kullanılabilmektedir.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-autocommit">
   <term>
    <constant>PDO::ATTR_AUTOCOMMIT</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     &false; olduğu takdirde, PDO otomatik veri gönderimini iptal eder,
     böylece bağlantı bir veri hareketi (transaction) başlatır.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-prefetch">
   <term>
    <constant>PDO::ATTR_PREFETCH</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Önalım boyutunun ayarlanması uygulamanızın bellek kullanım hızını
     dengeleyebilmenizi sağlar. Her veritabanı/sürücü önalım boyutunun
     ayarlanmasına izin vermez. Önalım boyutu ne kadar büyük seçilirse yüksek
     bellek kullanımı pahasına başarım o kadar artar.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-timeout">
   <term>
    <constant>PDO::ATTR_TIMEOUT</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Veritabanıyla iletişim zaman aşımını belirlemek için kullanılır.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-errmode">
   <term>
    <constant>PDO::ATTR_ERRMODE</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Bu sabit ile ilgili bilgi için <xref linkend='pdo.error-handling' />
     bölümüne bakınız.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-server-version">
   <term>
    <constant>PDO::ATTR_SERVER_VERSION</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Bu salt okunur bir özelliktir. PDO'nun bağlı olduğu veritabanı
     sunucusunun sürüm bilgisini döndürür.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-client-version">
   <term>
    <constant>PDO::ATTR_CLIENT_VERSION</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Bu salt okunur bir özelliktir. PDO sürücüsünün kullandığı istemci
     kütüphanesinin sürüm bilgisini döndürür.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-server-info">
   <term>
    <constant>PDO::ATTR_SERVER_INFO</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Bu salt okunur bir özelliktir. PDO'nun bağlı olduğu veritabanı sunucusu
     hakkında bazı temel bilgileri döndürür.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-connection-status">
   <term>
    <constant>PDO::ATTR_CONNECTION_STATUS</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-case">
   <term>
    <constant>PDO::ATTR_CASE</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Sütun isimlerindeki harflerin <literal>PDO::CASE_*</literal> sabitlerine
     göre belirtilmesini sağlar.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-cursor-name">
   <term>
    <constant>PDO::ATTR_CURSOR_NAME</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Bir gösterici için kullanılacak ismi tanımlar veya döndürür.
     Kaydırılabilir göstericiler ve konum belirterek yapılan güncelemeler için
     çok kullanışlıdır.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-cursor">
   <term>
    <constant>PDO::ATTR_CURSOR</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Gösterici türünü seçer. Desteklenen gösterici türleri:
     <constant>PDO::CURSOR_FWDONLY</constant> ve
     <constant>PDO::CURSOR_SCROLL</constant>. İhtiyacınızın kaydırılabilir bir
     gösterici olup olmadığına dair bir fikriniz yoksa seçiminizi
     <constant>PDO::CURSOR_FWDONLY</constant> sabitinden yana kullanın.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.attr-driver-name">
   <term>
    <constant>PDO::ATTR_DRIVER_NAME</constant>
     (<type>string</type>)
   </term>
   <listitem>
    <simpara>
     Sürücü ismini döndürür.
    </simpara>
    <para>
     <example>
      <title>- <constant>PDO::ATTR_DRIVER_NAME</constant> kullanımı</title>
      <programlisting role="php">
<![CDATA[
<?php
if ($db->getAttribute(PDO::ATTR_DRIVER_NAME) == 'mysql') {
  echo "Burada mysql üzerinde mysql'e özgü bir şeyler yapılıyor\n";
}
?>
]]>
      </programlisting>
     </example>
     </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.attr-oracle-nulls">
   <term>
    <constant>PDO::ATTR_ORACLE_NULLS</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Veri alınırken SQL NULL değerleri boş dizgelere dönüştürür.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-persistent">
   <term>
    <constant>PDO::ATTR_PERSISTENT</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Yeni bir bağlantı oluşturmak yerine kalıcı bir bağlantı ister. Ayrıntılı
     bilgi için <xref linkend='pdo.connections' /> sayfasına bakınız.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-statement-class">
   <term>
    <constant>PDO::ATTR_STATEMENT_CLASS</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
      Deyimlerin döndürüleceği sınıf adını tanımlar.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-fetch-catalog-names">
   <term>
    <constant>PDO::ATTR_FETCH_CATALOG_NAMES</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Sonuç kümesinde döndürülen her sütun isminin başına katalog ismini
     yerleştirir. Katalog ismi ile sütun ismi arasına bir nokta konur. Bu
     özellik sürücü seviyesinde desteklenir; kullandığınız sürücü bu özelliği
     desteklemeyebilir.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-fetch-table-names">
   <term>
    <constant>PDO::ATTR_FETCH_TABLE_NAMES</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Sonuç kümesinde döndürülen her sütun isminin başına tablo ismini
     yerleştirir.Tablo ismi ile sütun ismi arasına bir nokta konur. Bu
     özellik sürücü seviyesinde desteklenir; kullandığınız sürücü bu özelliği
     desteklemeyebilir.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-stringify-fetches">
   <term>
    <constant>PDO::ATTR_STRINGIFY_FETCHES</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Getirilen tüm değerlerin dizge olarak değerlendirilmesini sağlar.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-max-column-len">
   <term>
    <constant>PDO::ATTR_MAX_COLUMN_LEN</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Azami sütun uzunluğunu belirler.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-default-fetch-mode">
   <term>
    <constant>PDO::ATTR_DEFAULT_FETCH_MODE</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     PHP 5.2.0'dan beri kullanılabilmektedir.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-emulate-prepares">
   <term>
    <constant>PDO::ATTR_EMULATE_PREPARES</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     PHP 5.1.3'ten beri kullanılabilmektedir.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-default-str-param">
   <term>
    <constant>PDO::ATTR_DEFAULT_STR_PARAM</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Dizge değiştirgenin öntanımlı türünü belirler.
     Değer olarak sadece <constant>PDO::PARAM_STR_NATL</constant>
     veya <constant>PDO::PARAM_STR_CHAR</constant> atanabilir.
     </simpara>
    <simpara>
     PHP 7.2.0'dan beri kullanılabilir..
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.errmode-silent">
   <term>
    <constant>PDO::ERRMODE_SILENT</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Bir hata oluştuğunda bir istisna veya bir hata döndürülmez.
     Geliştiricinin hataları yakalayıp gereğini yapacağı varsayılır. Bu
     öntanımlı kiptir. Bu özellik ile ilgili ayrıntılı bilgi için <xref
     linkend='pdo.error-handling' /> sayfasına bakınız.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.errmode-warning">
   <term>
    <constant>PDO::ERRMODE_WARNING</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Bir hata oluştuğunda bir PHP <constant>E_WARNING</constant> iletisi
     çıktılanır. Bu özellik ile ilgili ayrıntılı bilgi için <xref
     linkend='pdo.error-handling' /> sayfasına bakınız.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.errmode-exception">
   <term>
    <constant>PDO::ERRMODE_EXCEPTION</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Bir hatanın oluşması bir <classname>PDOException</classname> istisnası
     ile sonuçlanır. Bu özellik ile ilgili ayrıntılı bilgi için <xref
     linkend='pdo.error-handling' /> sayfasına bakınız.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.case-natural">
   <term>
    <constant>PDO::CASE_NATURAL</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Sütun isimleri veritabanı sürücüsünün döndürdüğü haliyle bırakılır.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.case-lower">
   <term>
    <constant>PDO::CASE_LOWER</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Sütun isimlerinin küçük harflerle yazılmasına sebep olur.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.case-upper">
   <term>
    <constant>PDO::CASE_UPPER</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Sütun isimlerinin büyük harflerle yazılmasına sebep olur.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.null-natural">
   <term>
    <constant>PDO::NULL_NATURAL</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.null-empty-string">
   <term>
    <constant>PDO::NULL_EMPTY_STRING</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.null-to-string">
   <term>
    <constant>PDO::NULL_TO_STRING</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-next">
   <term>
    <constant>PDO::FETCH_ORI_NEXT</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Sonuç kümesindeki sonraki satırı döndürür. Sadece kaydırılabilir
     göstericiler için geçerlidir.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-prior">
   <term>
    <constant>PDO::FETCH_ORI_PRIOR</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Sonuç kümesindeki önceki satırı döndürür. Sadece kaydırılabilir
     göstericiler için geçerlidir.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-first">
   <term>
    <constant>PDO::FETCH_ORI_FIRST</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Sonuç kümesindeki ilk satırı döndürür. Sadece kaydırılabilir
     göstericiler için geçerlidir.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-last">
   <term>
    <constant>PDO::FETCH_ORI_LAST</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Sonuç kümesindeki son satırı döndürür. Sadece kaydırılabilir
     göstericiler için geçerlidir.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-abs">
   <term>
    <constant>PDO::FETCH_ORI_ABS</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     İstenen satırı sonuç kümesindeki satır numarasına göre döndürür. Sadece
     kaydırılabilir göstericiler için geçerlidir.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-rel">
   <term>
    <constant>PDO::FETCH_ORI_REL</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     İstenen satırı, göstericinin sonuç kümesindeki konumuna göreli olarak
     döndürür. Sadece kaydırılabilir göstericiler için geçerlidir.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.cursor-fwdonly">
   <term>
    <constant>PDO::CURSOR_FWDONLY</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Sadece ileri yönde hareket eden bir göstericiye sahip bir
     <classname>PDOStatement</classname> nesnesi oluşturur. PHP'deki en hızlı
     ve en çok kullanılan veriye erişim yöntemi olarak bu gösterici öntanımlı
     göstericidir.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.cursor-scroll">
   <term>
    <constant>PDO::CURSOR_SCROLL</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Kaydırılabilir göstericili bir <classname>PDOStatement</classname>
     nesnesi oluşturur. Satırların sonuç kümesinden nasıl döndürüleceğini
     belirtmek için <literal>PDO::FETCH_ORI_*</literal> sabitlerini kullanın.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.err-none">
   <term>
    <constant>PDO::ERR_NONE</constant>
     (<type>string</type>)
   </term>
   <listitem>
    <simpara>
     SQL deyiminin hatasız ve uyarısız başarıyla çalıştırıldığı anlamına gelen
     SQLSTATE '00000' karşılığıdır. Bir hata oluştuğunda hatayı
     <function>PDO::errorCode</function> veya
     <function>PDOStatement::errorCode</function> ile saptarken kolaylık olsun
     diye bu sabit vardır. Bunu normal olarak yöntemden dönen kodu inceleyerek
     saptayabilirsiniz.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-alloc">
   <term>
    <constant>PDO::PARAM_EVT_ALLOC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>Kaynak ayırma olayı.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-free">
   <term>
    <constant>PDO::PARAM_EVT_FREE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>Ayrılan kaynağı serbest bırakma olayı.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-exec-pre">
   <term>
    <constant>PDO::PARAM_EVT_EXEC_PRE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Bir hazır deyimi çalıştırmadan önce tetiklenen olay.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-exec-post">
   <term>
    <constant>PDO::PARAM_EVT_EXEC_POST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Bir hazır deyimi çalıştırıldıktan hemen sonra tetiklenen olay.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-fetch-pre">
   <term>
    <constant>PDO::PARAM_EVT_FETCH_PRE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Bir sonuç kümesinden bir sonucun alınmasından önce tetiklenen olay.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-fetch-post">
   <term>
    <constant>PDO::PARAM_EVT_FETCH_POST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Bir sonuç kümesinden bir sonucun alınmasının ardından tetiklenen olay.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-normalize">
   <term>
    <constant>PDO::PARAM_EVT_NORMALIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Sürücünün değiştirge isminin normalleştirilmesini sağlamak için ilişkili
     değiştirgenin kayda geçirilmesi sırasında tetiklenen olay.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.sqlite_deterministic">
   <term>
    <constant>PDO::SQLITE_DETERMINISTIC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
      Specifies that a function created with
      <function>PDO::sqliteCreateFunction</function> ile oluşturulan işlevin
      belirlenimsel olduğunu belirtir. Yani SQL deyiminin belli bir girdi için
      daima belli bir sonucu döndüreceğini belirtir. (PHP 7.1.4 ve sonrasında
      mevcuttur.)
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
