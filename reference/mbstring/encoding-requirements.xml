<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 96c9d88bad9a7d7d44bfb7f26c226df7ee9ddf26 Maintainer: nilgun Status: ready -->
<chapter xml:id="mbstring.php4.req" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>PHP Karakter Kodlaması Gereksinimleri</title>
 <para>
  Aşağıdaki karakter kodlaması türleri PHP'de güvenle kullanılabilmektedir.
  <itemizedlist>
   <listitem>
    <para>
     Tek baytlık kodlama
     <itemizedlist>
      <listitem>
       <simpara>
        <literal>00h</literal> .. <literal>7fh</literal> aralığındaki
        karakterlerden oluşan ASCII uyumlu (ISO646 uyumlu) eşlemler.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </listitem>
   <listitem>
    <para>
     Çok baytlı kodlama
     <itemizedlist>
      <listitem>
       <simpara>
        <literal>00h</literal> .. <literal>7fh</literal> aralığındaki
        karakterlerden oluşan ASCII uyumlu (ISO646 uyumlu) eşlemler.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        ISO2022 öncelem dizileri kullanılmaz.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <literal>00h</literal> .. <literal>7fh</literal> aralığındaki
        baytların hiçbiri, çok baytlı bir karakterin baytlarından biri olarak
        kullanılmaz.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </listitem>
  </itemizedlist>
 </para>
 <para>
  Aşağıdaki karakter kodlamaları PHP'da çalışmayan karakter kodlaması
  örnekleridir.
  <informalexample>
   <programlisting>
<![CDATA[
JIS, SJIS, ISO-2022-JP, BIG-5
]]>
   </programlisting>
  </informalexample>
 </para>
 <para>
  Özellikle bu karakter kodlamalarıyla yazılmış dizgelerin betik içinde
  betimleyici olarak kulanıldığı durumda, bu kodlamalarla yazılmış PHP
  betikleri çalışmasa da, gelen HTTP sorguları için
  <literal>mbstring</literal> modülünün şeffaf kodlama süzme işlevi etkin
  kılınarak bu kodlamalardan büyük oranda kaçınmak mümkündür.
 </para>
 <note>
  <para>
   Çözümleyici, tarayıcı ve karakter kodlaması konularında uzmanlığınız yoksa
   dahili karakter kodlaması olarak SJIS, BIG5, CP936, CP949 ve GB18030'u
   kesinlikle kullanmamalısınız.
  </para>
 </note>
 <note>
  <para>
   PHP ile bir veritabanını bağlanıyorsanız, başarımı artırmak ve kullanım
   kolaylığı bakımından dahili kodlama ile veritabanında kullandığınız
   kodlamanın aynı olması tercih edilmelidir.
  </para>
  <para>
   PostgreSQL kullanıyorsanız ve PostgreSQL ön ve artalan arasında otomatik
   karakter kodlaması dönüşümünü destekliyorsa, veritabanında kullanılan
   karakter kodlaması PHP'nin kullandığından farklı olabilir.
  </para>
 </note>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

