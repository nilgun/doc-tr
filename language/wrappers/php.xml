<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 8ebad33b9c1eba4e84bfc95d4de544801742d4b1 Maintainer: nilgun Status: ready -->

<refentry xml:id="wrappers.php" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" role="noversion">
 <refnamediv>
  <refname>php://</refname>
  <refpurpose>Çeşitli G/Ç akımlarına erişim</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>
   PHP, PHP'nin kendi girdi ve çıktı akımlarına, standart girdi, çıktı ve hata
   dosya tanıtıcılarına, bellek içi ve disk destekli geçici dosya akımlarına
   ve diğer dosya kaynaklarını okundukları ve yazıldıkları gibi işleyebilen
   süzgeçlere erişime izin veren bir dizi G/Ç akımı sağlar.
  </para>

  <refsect2 xml:id="wrappers.php.std">
   <title>php://stdin, php://stdout ve php://stderr</title>
   <simpara>
    <filename>php://stdin</filename>, <filename>php://stdout</filename> ve
    <filename>php://stderr</filename>, PHP sürecinin karşılık gelen girdi
    veya çıktı akımına doğrudan erişime izin verir. Akım, bir kopya dosya
    tanıtıcısına başvurur, bu nedenle <filename>php://stdin</filename>'i
    açar ve daha sonra kapatırsanız, yalnızca tanıtıcı kopyanızı kapatırsınız;
    STDIN içindeki gerçek akım etkilenmez. PHP 5.2.1'e kadar PHP'nin bu konuda
    hatalı davranış sergilediğini unutmayın. Bu sarmalayıcıları kullanarak
    akımları elle açmak yerine basitçe <constant>STDIN</constant>,
    <constant>STDOUT</constant> ve <constant>STDERR</constant> sabitlerini
    kullanmanız önerilir.
   </simpara>
   <simpara>
    <filename>php://stdin</filename> salt-okunur,
    <filename>php://stdout</filename> ve <filename>php://stderr</filename>
    ise salt-yazılırdır.
   </simpara>
  </refsect2>

  <refsect2 xml:id="wrappers.php.input">
   <title>php://input</title>
   <simpara>
    <filename>php://input</filename>, istek gövdesinden ham verileri okumanıza
    izin veren salt okunur bir akımtır. POST istekleri durumunda, özel
    &php.ini; yönergelerine bağlı olmadığı için
    <varname>$HTTP_RAW_POST_DATA</varname> yerine
    <filename>php://input</filename> kullanılması tercih edilir.
    Üstelik, <varname>$HTTP_RAW_POST_DATA</varname>'nın öntanımlı olarak
    doldurulmadığı durumlar için, <link
    linkend="ini.always-populate-raw-post-data">always_populate_raw_post_data</link>'yı
    etkinleştirmeye kıyasla daha az bellek yoğun bir seçenektir. <filename>php://input</filename> akımı,
    <literal>enctype="multipart/form-data"</literal> ile kullanılamaz.
   </simpara>
  </refsect2>

  <refsect2 xml:id="wrappers.php.output">
   <title>php://output</title>
   <para>
    <filename>php://output</filename>, çıktı tamponuna
    <function>print</function> ve <function>echo</function> gibi yazmanıza
    izin veren salt-yazılır bir akımdır.
   </para>
  </refsect2>

  <refsect2 xml:id="wrappers.php.fd">
   <title>php://fd</title>
   <simpara>
    <filename>php://fd</filename>, verilen dosya tanıtıcısına doğrudan
    erişime izin verir. Örneğin <filename>php://fd/3</filename>, dosya
    tanıtıcı 3'ü ifade eder.
   </simpara>
  </refsect2>

  <refsect2 xml:id="wrappers.php.memory">
   <title>php://memory ve php://temp</title>
   <simpara>
    <filename>php://memory</filename> ve <filename>php://temp</filename>,
    geçici verilerin dosya benzeri bir sarmalayıcıda depolanmasına izin
    veren okuma-yazma akımlarıdır. İkisi arasındaki tek fark,
    <filename>php://memory</filename> akımının verilerini her zaman bellekte
    depolamasıdır, oysa <filename>php://temp</filename>, bellekte depolanan
    veri miktarı önceden tanımlanmış bir sınıra ulaştığında (öntanımlı değer
    2 MB'dir) geçici bir dosya kullanır. Bu geçici dosyanın konumu,
    <function>sys_get_temp_dir</function> işlevindeki gibi belirlenir.
   </simpara>
   <simpara>
    <filename>php://temp</filename> bellek sınırı,
    <literal>/maxmemory:NN</literal> eklenerek denetlenebilir, burada NN,
    bayt cinsinden, geçici bir dosya kullanmadan önce bellekte saklanacak
    azami veri miktarıdır.
   </simpara>
  </refsect2>

  <refsect2 xml:id="wrappers.php.filter">
   <title>php://filter</title>
   <simpara>
    <filename>php://filter</filename>, açılış anında
    <link linkend="filters">süzgeçlerin</link> bir akıma uygulanmasını
    sağlamak için tasarlanmış bir meta sarmalayıcı çeşididir. Bu, içerikler
    okunmadan önce akışa başka türlü süzgeç uygulama imkanının olmadığı
    yerlerde, <function>readfile</function>, <function>file</function>
    ve <function>file_get_contents</function> gibi hepsi bir arada dosya
    işlevlerinde kullanışlıdır.
   </simpara>
   <para>
    <filename>php://filter</filename> hedefi, yolunun bir parçası olarak
    aşağıdaki seçenekleri alır. Tek bir yolda birden çok süzgeç zinciri
    belirtilebilir. Lütfen bu seeneklerin kullanımıyla ilgili ayrıntılar
    için örneklere bakın.
   </para>
   <para>
    <table>
     <title>php://filter seçenekleri</title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>Seçenek</entry>
        <entry>Açıklama</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <literal>resource=&lt;süzülecek akım&gt;</literal>
        </entry>
        <entry>
         Bu seçenek gereklidir. Süzülecek akımı belirtir.
        </entry>
       </row>
       <row>
        <entry>
         <literal>read=&lt;okuma zincirine uygulanacak süzgeç listesi&gt;</literal>
        </entry>
        <entry>
         Bu seçenek isteğe bağlıdır. Burada, süzgeçler arasına boru
         (<literal>|</literal>) karakteri konarak bir veya daha fazla
         süzgeç belirtilebilir.
        </entry>
       </row>
       <row>
        <entry>
         <literal>write=&lt;yazma zincirine uygulanacak süzgeç listesi&gt;</literal>
        </entry>
        <entry>
         Bu seçenek isteğe bağlıdır. Burada, süzgeçler arasına boru
         (<literal>|</literal>) karakteri konarak bir veya daha fazla
         süzgeç belirtilebilir.
        </entry>
       </row>
       <row>
        <entry>
         <literal>&lt;her iki zincire uygulanacak süzgeç listesi&gt;</literal>
        </entry>
        <entry>
         <literal>read=</literal> veya <literal>write=</literal> ile
         öncelenmemiş süzgeç listeleri uygun olduğu takdirde okuma ve yazma
         zincirlerinin ikisine de uygulanır.
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
  </refsect2>
 </refsect1>

 <refsect1 role="options"><!-- {{{ -->
  &reftitle.options;
  <para>
   <table>
    <title>
     Sarmalayıcı Özeti (<literal>php://filter</literal> için,
     süzülen sarmalayıcı özetine bakın)
    </title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Özellik</entry>
       <entry>Destek</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.allow-url-fopen">allow_url_fopen</link> ile sınırlı</entry>
       <entry>Hayır</entry>
      </row>
      <row>
       <entry><link linkend="ini.allow-url-include">allow_url_include</link> ile sınırlı</entry>
       <entry>Sadece
        <literal>php://input</literal>,
        <literal>php://stdin</literal>,
        <literal>php://memory</literal> ve
        <literal>php://temp</literal> için.
       </entry>
      </row>
      <row>
       <entry>Okuma izni</entry>
       <entry>Sadece
        <literal>php://stdin</literal>,
        <literal>php://input</literal>,
        <literal>php://fd</literal>,
        <literal>php://memory</literal> ve
        <literal>php://temp</literal> için.
       </entry>
      </row>
      <row>
       <entry>Yazma izni</entry>
       <entry>Sadece
        <literal>php://stdout</literal>,
        <literal>php://stderr</literal>,
        <literal>php://output</literal>,
        <literal>php://fd</literal>,
        <literal>php://memory</literal> ve
        <literal>php://temp</literal> için.
       </entry>
      </row>
      <row>
       <entry>Ekleme izni</entry>
       <entry>Sadece
        <literal>php://stdout</literal>,
        <literal>php://stderr</literal>,
        <literal>php://output</literal>,
        <literal>php://fd</literal>,
        <literal>php://memory</literal> ve
        <literal>php://temp</literal> için. (Yazmaya eşdeğer)
       </entry>
      </row>
      <row>
       <entry>Aynı anda okuma ve yazma izni</entry>
       <entry>Sadece
        <literal>php://fd</literal>,
        <literal>php://memory</literal> ve
        <literal>php://temp</literal> için.
       </entry>
      </row>
      <row>
       <entry><function>stat</function> desteği</entry>
       <entry>
        Hayır.  Ancak, <literal>php://memory</literal> ve
        <literal>php://temp</literal> akımları <function>fstat</function>
        işlevini destekler.
       </entry>
      </row>
      <row>
       <entry><function>unlink</function> desteği</entry>
       <entry>Hayır</entry>
      </row>
      <row>
        <entry><function>rename</function> desteği</entry>
       <entry>Hayır</entry>
      </row>
      <row>
       <entry><function>mkdir</function> desteği</entry>
       <entry>Hayır</entry>
      </row>
      <row>
       <entry><function>rmdir</function> desteği</entry>
       <entry>Hayır</entry>
      </row>
      <row>
       <entry><function>stream_select</function> desteği</entry>
       <entry>Sadece
        <literal>php://stdin</literal>,
        <literal>php://stdout</literal>,
        <literal>php://stderr</literal>,
        <literal>php://fd</literal> ve
        <literal>php://temp</literal> için.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </refsect1> <!-- }}} -->

 <refsect1 role="examples"><!-- {{{ -->
  &reftitle.examples;
  <example><!-- {{{ -->
   <title>- php://temp/maxmemory</title>
   <para>
    Bu isteğe bağlı seçenek, <filename>php://temp</filename> geçici bir dosya
    kullanmaya başlamadan önce bellek sınırının ayarlanmasına izin verir.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
// Sınırı 5 MB yapalım.
$fiveMBs = 5 * 1024 * 1024;
$fp = fopen("php://temp/maxmemory:$fiveMBs", 'r+');

fputs($fp, "hello\n");

// Yazdığımızı oku.
rewind($fp);
echo stream_get_contents($fp);
?>
]]>
   </programlisting>
  </example><!-- }}} -->
  <example><!-- {{{ -->
   <title>- php://filter/resource=&lt;süzülecek akım&gt;</title>
   <para>
    Bu seçenek <filename>php://filter</filename> belirtiminizin sonunda
    bulunmalı ve süzülmesini istediğiniz akımı göstermelidir.T
   </para>
   <programlisting role="php">
<![CDATA[
<?php
/* Aslında hiçbir süzgeç belirtilmediğinden
  readfile("http://www.example.com");
  ile eşdeğerdir */

readfile("php://filter/resource=http://www.example.com");
?>
]]>
   </programlisting>
  </example><!-- }}} -->
  <example><!-- {{{ -->
   <title>- php://filter/read=&lt;okuma zincirine uygulanacak süzgeç listesi&gt;</title>
   <para>
    Bu seçenek, boru karakteri | ile ayrılmış bir veya daha fazla
    dosya adı alır.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
/* www.example.com içeriğini tamamen büyük harlerle çıkılar. */
readfile("php://filter/read=string.toupper/resource=http://www.example.com");

/* Ayrıca ROT13 kodlaması dışında yukarıdaki ile aynı*/
readfile("php://filter/read=string.toupper|string.rot13/resource=http://www.example.com");
?>
]]>
   </programlisting>
  </example><!-- }}} -->
  <example><!-- {{{ -->
   <title>- php://filter/write=&lt;yazma zincirine uygulanacak süzgeç listesi&gt;</title>
   <para>
    Bu seçenek, boru karakteri | ile ayrılmış bir veya daha fazla
    dosya adı alır.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
/* rot13 süzgeci üzerinden "Hello World" dizesini süzer ve
     çıktıyı geçerli dizindeki example.txt dosyasına yazar */
file_put_contents("php://filter/write=string.rot13/resource=example.txt","Hello World");
?>
]]>
   </programlisting>
  </example><!-- }}} -->
  <example>
   <title>- php://memory ve php://temp yeniden kullanılamaz</title>
   <para>
    <filename>php://memory</filename> ve <filename>php://temp</filename>
    yeniden kullanılamaz, yani akımlar kapatıldıktan sonra bunlara tekrar
    başvurmanın bir yolu yoktur.
   </para>
   <programlisting role="php">
<![CDATA[
file_put_contents('php://memory', 'PHP');
echo file_get_contents('php://memory'); // hiçbir şey basmaz
]]>
   </programlisting>
  </example>
 </refsect1><!-- }}} -->
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

