<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: a9edd62d087ab1eb6292c795b7256e14ff9f1234 Maintainer: nilgun Status: ready -->
<!-- CREDITS: tpug, sezer -->
 <sect1 xml:id="language.oop5.constants" xmlns="http://docbook.org/ns/docbook">
  <title>Sınıf Sabitleri</title>
  <para>
   <link linkend="language.constants">Sabit</link> değerlerinin her sınıf için
   ayrı ayrı tanımlanabilmesi mümkündür.
   Sabit sınıflarının öntanımlı görünülüğü <literal>public</literal>'tir.
  </para>
  <note>
   <para>
    Sınıf sabitlerini bir çocuk sınıf yeniden tanımlayabilir.
   </para>
  </note>
  <para>
   Ayrıca, sınıf arayüzlerinin de kendi sabitlerinin olması mümkündür.
   Örnekler için <link linkend="language.oop5.interfaces">Nesne
   Arayüzleri</link> belgesine bakınız.
  </para>
  <para>
   Bir sınıfa bir değişken kullanarak atıfta bulunmak mümkündür. Değişkenin
   değeri, <literal>self</literal>, <literal>parent</literal>,
   <literal>static</literal> gibi bir anahtar sözcük olamaz.
  </para>
  <para>
   Sınıf sabitlerinin her sınıf örneği için değil her sınıf için bir kere
   ayrıldığını unutmayın.
  </para>
  <example>
   <title> - Bir sabitin tanımlanması ve kullanımı</title>
   <programlisting role="php">
<![CDATA[
<?php
class MyClass
{
    const CONSTANT = 'sabit değer';

    function showConstant() {
        echo  self::CONSTANT . "\n";
    }
}

echo MyClass::constant . "\n";

$classname = "MyClass";
echo $classname::CONSTANT . "\n";

$class = new MyClass();
$class->showConstant();

echo $class::CONSTANT."\n";
?>
]]>
   </programlisting>
  </example>
  <para>
    Özel <constant>::class</constant> sabiti ile
    derleme sırasında tamamen nitelenmiş sınıf ismi çözünürlüğü mümkün
    olup isim alanlı sınıflar için kulllanışlıdır:
  </para>
 <example>
  <title>- İsim alanlı ::class örneği</title>
  <programlisting role="php">
<![CDATA[
<?php
namespace foo {
    class bar {
    }

    echo bar::class; // foo\bar
}
?>
]]>
  </programlisting>
 </example>

 <example>
  <title>- Sınıf sabitinde ifade kullanımı</title>
  <programlisting role="php">
<![CDATA[
<?php
const BİR = 1;

class foo {
    const İKİ = BİR * 2;
    const ÜÇ = BİR + self::İKİ;
    const CÜMLE = 'ÜÇ için değer: '.self::THREE;
}
?>
]]>
  </programlisting>
  </example>

  <example>
   <title>- Sınıf sabiti görünürlük değiştiricileri (PHP 7.1.0 ve sonrası)
   </title>
   <programlisting role="php">
<![CDATA[
<?php
class Foo {
    public const BAR = 'bar';
    private const BAZ = 'baz';
}
echo Foo::BAR, PHP_EOL;
echo Foo::BAZ, PHP_EOL;
?>
]]>
  </programlisting>
   &example.outputs.71;
   <screen>
<![CDATA[
bar

Fatal error: Uncaught Error: Cannot access private const Foo::BAZ in …
]]>
   </screen>
 </example>
 <note>
  <para>
   Sınıf sabitlerinde görünürlük değiştiricileri desteği PHP 7.1.0'da eklendi.
  </para>
 </note>
 </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
