<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: b95d28e6ec86e4a71e012737d36ebdc1cf009180 Maintainer: nilgun Status: ready -->
<refentry xml:id="closure.bindto" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Closure::bindTo</refname>
  <refpurpose>
   Yeni bir bağlı nesne ve sınıf bağlamıyla bir closure nesnesini kopyalar
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type class="union"><type>Closure</type><type>false</type></type><methodname>Closure::bindTo</methodname>
   <methodparam><type>object</type><parameter>yeninesne</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>yenibağlam</parameter>
   <initializer>"static"</initializer></methodparam>
  </methodsynopsis>
  <para>
   Yeni bir <link linkend="functions.anonymous">anonim işlevi</link> mevcutla
   aynı gövde ve bağlı değişkenlerde, farklı bir "bağlı nesne" ve yeni bir
   "sınıf bağlamı"yla oluşturup döndürür.
  </para>

  <para>
   "Bağlı nesne", işlev gövdesinde bulunacak <literal>$this</literal> değerini,
   "sınıf bağlamı" ise, anonim işlevin erişebileceği private ve protected
   üyeleri belirleyen bir sınıfı temsil eder. Yani, görünür olacak üyeler,
   anonim işlevin <parameter>yenibağlam</parameter> değiştirgesinde değer
   olarak belirtilen sınıfın yöntemleri olan anonim işlevlerle aynıdır.
  </para>

  <para>
   Statik closure'lar herhangi bir bağlı nesneye sahip olamadıkları gibi
   (<parameter>yeninesne</parameter> değeri &null; olmalıdır) bu işlev de
   onların sınıf bağlamını değiştirmekte kullanılamaz.
  </para>

  <para>
   Bu işlev, statik-olmayan bir closure için, sahip olunan bağlı bir örneğin
   bağlamda olup olmadığını görmek içindir.
  </para>

  <note>
   <para>
    Anonim işlevleri sadece yinelemek istiyorsanız basitçe
    <link linkend="language.oop5.cloning">kopyalama</link> yapabilirsiniz.
   </para>
  </note>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>yeninesne</parameter></term>
    <listitem>
     <para>
      Anonim işleve bağlaması için verilen nesne ya da
      bağın kaldırılması için &null;.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>yenibağlam</parameter></term>
    <listitem>
     <para>
      İlişkili closure'un ilişkilendirileceği sınıf bağlamı ya da
      ilişkili olanı tutmak için 'static'. Bir nesne belirtilirse bu nesnenin
      sınıfı geçerli olur. Bu, bağlı nesnenin protected ve private yöntemlerinin
      görünürlüğünü saptamaya yarar. Bu değiştirgede dahili bir sınıfı
      (nesnesini) aktarmaya izin verilmez.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Yeni oluşturulan <classname>Closure</classname> nesnesiyle döner
   &return.falseforfailure;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>- <function>Closure::bindTo</function> örneği</title>
   <programlisting role="php">
<![CDATA[
<?php

class A {
    function __construct($val) {
        $this->val = $val;
    }
    function getClosure() {
        //bu nesne ve bağlama bağlı closure ile döner
        return function() { return $this->val; };
    }
}

$ob1 = new A(1);
$ob2 = new A(2);

$cl = $ob1->getClosure();
echo $cl(), "\n";
$cl = $cl->bindTo($ob2);
echo $cl(), "\n";
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
1
2
]]>
   </screen>
  </example>
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><link linkend="functions.anonymous">Anonim işlevler</link></member>
   <member><methodname>Closure::bind</methodname></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
