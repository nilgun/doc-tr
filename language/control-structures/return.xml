<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: a9a6224ca97531df0a4e4b9b16b59c3f2baf1b09 Maintainer: nilgun Status: ready -->
<sect1 xml:id="function.return" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>return</title>
 <?phpdoc print-version-for="return"?>
  <simpara>
   <literal>return</literal> program denetimini çağrıldığı modüle döndürür ve
   program kendinden sonra gelen ifadeden itibaren çalışmayı sürdürür
 </simpara>
 <simpara>
  Bir işlevin içinde kullanıldığında, <literal>return</literal>
  deyimi çalışmakta olan işlevi hemen sonlandırıp değiştirgesini çağrılan
  işlevin değeri olarak döndürür. <literal>return</literal> ayrıca, bir
  betiğin veya bir <function>eval</function> deyiminin çalışmasını
  sonlandırmak için de kullanılabilir.
 </simpara>
 <simpara>
  Betik genelinde çağrıldığında, betik dosyasının çalışmasını
  sonlandırılır. Eğer dosya <function>include</function> ya da
  <function>require</function> ile betik dosyasına dahil edilmiş bir dosya
  ise, <literal>return</literal> deyimi akış denetiminin ana dosyaya
  aktarılmasını sağlar. Dahası, <literal>return</literal> deyiminin
  çağrıldığı dosya <function>include</function> ile dahil edilmişse
  <literal>return</literal> değeri  <function>include</function>
  çağrısının değeri olarak dönecektir. <literal>return</literal> ana
  betik dosyasının içinden çağrıldığı takdirde, betiğin çalışması
  sonlandırılacaktır. Eğer <literal>return</literal> deyiminin
  çağrıldığı dosya, ismi &php.ini; içindeki <link
  linkend="ini.auto-prepend-file">auto_prepend_file</link> veya <link
  linkend="ini.auto-append-file">auto_append_file</link> yapılandırma
  seçenekleri ile atanan bir dosya ise bu betik dosyasının da çalışmasını
  sonlandıracaktır.
 </simpara>
 <simpara>
  Daha fazla bilgi için, <link linkend="functions.returning-values">Dönüş
  değerleri</link> bölümüne bakınız.
 </simpara>
 <para>
  <note>
   <simpara>
    <literal>return</literal> bir işlev değil bir dil oluşumu
    olduğundan, değiştirgesini içeren parantez
    <emphasis>yalnızca</emphasis> değiştirge bir ifade içeriyorsa
    zorunludur. Bir değişken döndürürken genellikle parantez kullanılmaz
    ve kullanılmaması önerilir.
   </simpara>
  </note>
   <note>
    <simpara>
     Değiştirgesiz kullanılacaksa parantez konulmamalıdır bu durumda dönen
     değer &null; olur. Değiştirge içermeyen parantez kullanımı bir
     çözümleme hatası ile sonuçlanır.
   </simpara>
  </note>
 </para>
 <para>
  PHP 7.1.0'dan itibaren, değiştirgeli dönüş ifadelerinin
  <constant>E_COMPILE_ERROR</constant>'u tetiklediği durumda, dönüş türü
  <type>void</type> olmadığı sürece  değiştirgesiz <literal>return</literal>
  deyimleri de <constant>E_COMPILE_ERROR</constant>'u tetikler.
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
