<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 8358db82c0c9c91de1e7fe4b9d8b1dcbf2b24975 Maintainer: nilgun Status: ready -->
   <sect1 xml:id="install.unix.apache2" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
    <title>Unix sistemler ve Apache 2.x</title>
    <para>
     Bu bölüm Unix sistemlerde PHP'nin Apache 2.x'e kurulumu hakkında
     bilgiler ve ipuçları içerir.
    </para>

    &warn.apache2.compat;

    <para>
     Apache 2.x HTTP Sunucusu hakkında temel bir bilgi edinmek için mutlaka
     <link xlink:href="&url.apache2.docs;">Apache HTTP Sunucusu Sürüm 2.x
     Belgeleri</link>ne bakmanızı öneririz.
    </para>

    <para>
     En son sürümü <link xlink:href="&url.apache;">Apache 2.x indirme
     sitesinden</link> ve buna uygun PHP sürümünü yukarıda bahsedilen yerlerden
     indirebilirsiniz.
     Bu kısa kılavuz Apache 2.x ve PHP hakkında sadece temel bilgi sağlar.
     Daha ayrıntılı bilgi edinmek için <link
     xlink:href="&url.apache2.docs;">Apache HTTP Sunucusu Belgeleri</link>ne
     bakınız. Kurulum talimatlarının sürüm numaralarından ötürü geçerliliğini
     yitirmemesi için sürüm numaraları 'NN' şeklinde belirtilmiştir, NN yerine
     kurulan Apache sürümünün sürüm numarası yazılmalıdır.
    </para>
    <para>
     Apache 2.x'in şu an iki sürümü mevcuttur: 2.4 ve 2.2. Bunlardan birini
     seçmek için çeşitli sebepler olabilirse de 2.4 şu an için en son ve
     önerilen sürümdür. Ancak, burada sözü edilen talimatlar hem 2.4 hem de 2.2
     için çalışır. Apache httpd 2.2 resmen sonlandırılmış olup yeni
     geliştirmeler yapılmamakta ve yama çıkarılmamaktadır.
    </para>
    <orderedlist>
     <listitem>
     <para>Apache HTTP sunucusunu edindikten sonra şu komutları verin:
     </para>
     <informalexample>
      <screen>
<![CDATA[
tar -xzf httpd-2.x.NN.tar.gz
]]>
      </screen>
     </informalexample>
     </listitem>

     <listitem>
     <para>Benzer işlemleri PHP için de yapın:</para>
     <informalexample>
     <screen>
<![CDATA[
tar -xzf php-NN.tar.gz
]]>
     </screen>
     </informalexample>
     </listitem>

     <listitem>
     <para>
      Apache'yi derleyip kurun. Apache'nin nasıl
      derleneceğini Apache kurulumu belgesinden öğrenebilirsinz.
     </para>

     <informalexample>
     <screen>
<![CDATA[
cd httpd-2_x_NN
./configure --enable-so
make
make install
]]>
     </screen>
     </informalexample>
     </listitem>

     <listitem>
 <para>
    Böylece standart prefork MPM'si ve yüklenebilir modül desteği ile Apache
    2.x.NN /usr/local/apache2 altına kurulmuş oldu. Kurulumu denemek için
    Apache HTTP sunucusunu normal yollardan başlatabilirsiniz. Örnek:
    <informalexample>
    <screen>
<![CDATA[
/usr/local/apache2/bin/apachectl start
]]>
    </screen>
    </informalexample>
    PHP yapılandırması ile çalıştırmak üzere sunucuyu durdurun:
    <informalexample>
    <screen>
<![CDATA[
/usr/local/apache2/bin/apachectl stop
]]>
    </screen>
    </informalexample>
 </para>
 </listitem>

 <listitem>
  <para>
   Şimdi PHP'yi yapılandırıp kurun. Bunu hangi eklentileri etkin kılacaksanız
   onların seçeneklerini kullanarak yapabilirsiniz. Olası seçeneklerin listesini
   almak için komut satırına <literal>./configure --help</literal> yazın.
   Örneğimizde Apache ve MySQL desteğini etkin kılacağız.
  </para>

  <para>
   Apache'yi yukarıda açklandığı gibi kaynak paketinden derlediyseniz aşağıdaki
   örnek sizin apxs yolunuzla eşleşecektir. Fakat Apache'yi başka bir şekilde
   kurduysanız apxs yolunu buna uygun olarak ayarlamalısınız. Bazı dağıtımlar
   apxs yerine apxs2 ismini kullanır, buna dikkat edin.
  </para>
  <informalexample>
   <screen>
<![CDATA[
cd ../php-NN
./configure --with-apxs2=/usr/local/apache2/bin/apxs --with-mysql
make
make install
]]>
      </screen>
     </informalexample>
   <para>
    Eğer kurulumdan sonra yapılandırmanızı değiştirmek isterseniz sadece
    configure, make ve make install adımlarını yinelemeniz yeterli olacaktır.
    Yeni modülün etkin olabilmesi için Apache'yi yeniden başlatmanız gerekir.
    Apache'yi yeniden derlemeniz gerekmez.

    Aksi özellikle belirtilmedikçe 'make install' ile phpize gibi çeşitli PHP
    araçları, PEAR, PHP CLI ve bir takım başka şeylerin de kurulumu yapılır.
   </para>
   <para>
     Aksi belirtilmedikçe, 'make install' ile phpize gibi çeşitli PHP araçları,
     PEAR, PHP CLI ve benzerleri de kurulacaktır.
   </para>
  </listitem>
  <listitem>
   <para>
    php.ini dosyanızı yapılandırın.
   </para>
     <informalexample>
     <screen>
<![CDATA[
cp php.ini-development /usr/local/lib/php.ini
]]>
      </screen>
     </informalexample>

   <para>
    PHP seçeneklerini ayarlamak için .ini dosyanızı düzenleyebilirsiniz. .ini
    dosyanızın başka bir yerde durmasını istiyorsanız, 5. şıkta
    --with-config-file-path=/başka/bir/yer seçeneği ile dosyanız için başka
    bir yer belirtebilirsiniz.
   </para>
   <para>
    php.ini-dist yerine php.ini-production (dağıtımın standart .ini dosyası
    yerine önerilen yapılandırmalar dosyasını) kullanmayı tercih ederseniz,
    değişiklik listesini okumayı ihmal etmeyin, çünkü bunlar PHP'nin
    davranışını etkileyecektir.
   </para>
  </listitem>
  <listitem>
   <para>
    PHP modülünün yüklenmesi için httpd.conf dosyasını düzenlemelisiniz.
    LoadModule yönergesinin değeri PHP modülünün sistemdeki yerini
    göstermelidir. Yukarıdaki 'make install' bunu sizin yerinize yapmıştır
    ama emin olmak için siz yine de bir bakın.
   </para>
      <informalexample>
       <para>
        PHP 7 için:
       </para>
       <programlisting role="apache-conf">
<![CDATA[
LoadModule php7_module modules/libphp7.so
]]>
       </programlisting>
     </informalexample>

      <informalexample>
       <para>
        PHP 5 için:
       </para>
       <programlisting role="apache-conf">
<![CDATA[
LoadModule php5_module modules/libphp5.so
]]>
    </programlisting>
   </informalexample>
  </listitem>
  <listitem>
   <para>
    Apache'ye belli dosya uzantılarını PHP uzantıları olarak ele almasını
    söyleyin. Örneğin, .php uzantılı dosyaları Apache'nin PHP dosyaları
    olarak ele almasını isteyebiliriz. Apache AddType yönergesini kullanmamak
    suretiyle, PHP tarafından çalıştırılmak üzere istismar.php.jpg gibi
    dosyaların oluşturulması ve yüklenmesi gibi tehlikeli durumlardan
    kaçınmak isteyebilirsiniz. Biz örnek olsun diye .php uzantısını
    ekledik. Başka uzantıları da buraya ekleyebilirsiniz. Bunları aralarında
    boşluk bırakarak aynı satıra yazabilirsiniz.
   </para>
   <informalexample>
    <programlisting role="apache-conf">
<![CDATA[
<FilesMatch \.php$>
    SetHandler application/x-httpd-php
</FilesMatch>
]]>
    </programlisting>
   </informalexample>
   <para>
    Veya .php, .php2, .php3, .php4, .php5, .php6 ve .phtml gibi dosyalar
    dışında hiçbir dosyanın PHP tarafından çalıştırılmamasını şöyle
    sağlayabilirsiniz:
   </para>
   <informalexample>
    <programlisting role="apache-conf">
<![CDATA[
<FilesMatch "\.ph(p[2-6]?|tml)$">
    SetHandler application/x-httpd-php
</FilesMatch>
]]>
    </programlisting>
   </informalexample>
   <para>
    PHP kaynak kodlarını renklendirilmiş olarak göstermek için .phps
    uzantısını da yapılandırmanıza ekleyebilirsiniz. Bu, şöyle yapılır:
   </para>
   <informalexample>
    <programlisting role="apache-conf">
<![CDATA[
<FilesMatch "\.phps$">
    SetHandler application/x-httpd-php-source
</FilesMatch>
]]>
    </programlisting>
   </informalexample>
   <para>
     .php dosyalarının uzantılarını .phps olarak değiştirmeden kaynak kodlarını
    renklendirilmiş olarak göstermek isterseniz bunu şöyle yapabilirsiniz:
   </para>
   <informalexample>
    <programlisting role="apache-conf">
<![CDATA[
RewriteEngine On
RewriteRule (.*\.php)s$ $1 [H=application/x-httpd-php-source]
]]>
    </programlisting>
   </informalexample>
   <para>
     PHP kaynak süzgeci, gizli kalması gereken bilgiler içeren genel kullanıma
    açık sunucularda kullanılmamalıdır. Aksi takdirde gizli kalması gereken
    bilgiler kaynak koda eklenebilir.
   </para>
  </listitem>
  <listitem>
   <para>
    Artık Apache'yi başlatabilirsiniz. Bunun için Apache'yi her zaman ki gibi
    başlatmanız yetecektir:
   </para>
   <informalexample>
    <screen>
<![CDATA[
/usr/local/apache2/bin/apachectl start
]]>
    </screen>
   </informalexample>
   <para>VEYA</para>
   <informalexample>
    <screen>
<![CDATA[
service httpd restart
 ]]>
    </screen>
   </informalexample>

      </listitem>
     </orderedlist>
     <para>
     Yukarıdaki adımları izleyerek PHP'nin bir <literal>SAPI</literal> modülü
     olarak çalıştığı bir Apache 2 HTTP sunucusuna sahip olursunuz. Apache ve
     PHP için şüphesiz birçok farklı yapılandırma seçeneği vardır.
     Yapılandırma seçeneklerinin listesi için her kaynak ağacında
     <command>./configure --help</command> çalıştırabilirsiniz.
    </para>
    <para>
     Apache derlenirken <filename>prefork</filename> MPM modülü yerine ,
     <filename>worker</filename> MPM modülü seçilerek çok evreli derlenebilir.
     Bunu yapmak için 3. şıkta derleme seçeneklerinize şu seçeneğini
     ekleyebilirsiniz:
    </para>
    <informalexample>
    <screen>
<![CDATA[
--with-mpm=worker
]]>
    </screen>
    </informalexample>
    <para>
     Bunu yapmadan önce, bunun olası sonuçları hakkında
     bilgi sahibi olmaya, azından ne gibi etkilerinin olacağını anlamaya
     çalışın. Bu konuda daha ayrıntılı bilgi edinmek için Apache HTTP
     sunucusunun belgelerinden <link xlink:href="&url.apache2.mpm;">Çok
     Süreçlilik Modülleri (MPM'ler)</link> belgesini okuyunuz.
    </para>
    <note>
     <para>
      İçerik dili uzlaşımı kullanmak isterseniz
      <link linkend="faq.installation.apache.multiviews">Apache MultiViews
      SSS</link>'ine bakınız.
     </para>
    </note>
    <note>
     <para>
      Ayrıca, PHP'yi deneysel Zend Thread Safety (ZTS) motoru ile de
      derleyebilirsiniz. Böyle bir yapılandırmada bütün eklentiler
      kullanılamayacaktır. Bu bakımdan Apache'yi standart
      <filename>prefork</filename> MPM'si ile derlemenizi öneriyoruz.
     </para>
    </note>
   </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
