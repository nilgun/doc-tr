<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 4c8603d1c114c20d9ee6142f508da396affc83a8 Maintainer: nilgun Status: ready -->
<sect1 xml:id="install.unix.lighttpd-14" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Unix sistemlerde Lighttpd 1.4</title>

 <para>
  Bu bölüm PHP'nin Unix sistemlerde Lighttpd 1.4 ile kurulumu hakkında
  bilgiler ve ipuçları içerir.
 </para>

 <para>
  Lütfen devam etmeden önce <link xlink:href="&url.lighttpd.doc;">Lighttpd
  redmine</link> sitesini ziyaret edip Lighttpd'nin doğru düzgün nasıl
  kurulacağını öğreniniz.
 </para>

 <para>
  PHP ve Lighttpd'ye bağlanmak için tercih edilen SAPI Fastcgi'dir. Fastcgi,
  PHP 5.3'te php-cgi'yi otomatik olarak sihirli bir şekilde etkin kılar.
  Fakat, eski sürümler için PHP'nin <option
  role="configure">--enable-fastcgi</option> ile derlenmesi gerekir. PHP'nin
  fastcgi için hazır olduğunu doğrulamak için <literal>php -v</literal>
  çıktısının <literal>PHP 5.2.5 (cgi-fcgi)</literal> içermesi gerekir. PHP
  5.2.3 öncesinde, fastcgi, php çalıştırılabiliri üzerinde etkindi (php-cgi
  diye birşey yoktu).
 </para>

 <sect2 xml:id="install.unix.lighttpd-14.lighttpd-spawn">
  <title>Letting Lighttpd'ye PHP süreçlerini çatallattırmak</title>

  <para>
   Lighttpd'nin PHP'ye bağlanmasını ve fastcgi süreçlerini çatallamasını
   sağlamak üzere yapılandırmak için lighttpd.conf dosyasını düzenlemeniz
   gerekir. Fastcgi süreçlerine yerel sistemden bağlanmak için soketler
   tercih edilir.
  </para>

  <example>
   <title>- lighttpd.conf'tan bir bölüm</title>
   <screen>
<![CDATA[
server.modules += ( "mod_fastcgi" )

fastcgi.server = ( ".php" =>
  ((
    "socket" => "/tmp/php.socket",
    "bin-path" => "/usr/local/bin/php-cgi",
    "bin-environment" => (
      "PHP_FCGI_CHILDREN" => "16",
      "PHP_FCGI_MAX_REQUESTS" => "10000"
    ),
    "min-procs" => 1,
    "max-procs" => 1,
    "idle-timeout" => 20
  ))
)
]]>

   </screen>
  </example>

  <para>
   <code>bin-path</code> yönergesi lighttpd'nin fastcgi süreçlerini dinamik
   olarak çatallamasına izin verir. PHP kendi çocuklarını PHP_FCGI_CHILDREN
   ortam değişkenine göre çatallayacaktır. PHP, PHP_FCGI_MAX_REQUESTS
   değerinin aşılmasına sebep olan çocuk süreci öldürür. PHP'de
   <code>min-procs</code> ve <code>max-procs</code> yönergelerinden genel
   olarak kaçınılması gerekir. PHP kendi çocuklarını yönetir ve makine kodu
   önbelleklerini APC gibi çocukları arasında paylaştırır.
   <code>min-procs</code> yönergesine 1'den büyük bir değer atanmışsa PHP
   yanıtçılarının sayısı PHP_FCGI_CHILDREN değerinin katları olacaktır  (2
   min-procs * 16 çocuk eşittir 32 yanıtçı).
  </para>
 </sect2>

 <sect2 xml:id="install.unix.lighttpd-14.spawn-fcgi">
  <title>Spawn-fcgi ile çatallama</title>

  <para>
   Lighttpd, fastcgi süreçlerinin çatallanmasını kolaylaştırmak için
   spawn-fcgi adında bir programla gelir.
  </para>
 </sect2>

 <sect2 xml:id="install.unix.lighttpd-14.spawn-php">
  <title>php-cgi'nin çatallanması</title>

  <para>
   Süreçleri spawn-fcgi kullanmaksızın çatallamak mümkünse de, biraz ağır
   kaldırma çalışmak gerekir. Gelen istekleri karşılamak için PHP'nin kaç
   çocuk çatallayacağı PHP_FCGI_CHILDREN ortam değişkeni ile belirlenir.
   PHP'nin her çocuğunun kaç isteklik yaşayacağını ise PHP_FCGI_MAX_REQUESTS
   belirler. Aşağıda, PHP yanıtçılarının çatallanmasına yardımcı olan basit
   bir bash betiği verilmiştir.
  </para>

  <example>
   <title>- FastCGI Yanıtçılarının Çatallanması</title>
   <screen>
<![CDATA[
#!/bin/sh

# php-cgi çalıştırılabilirinin yeri
PHP=/usr/local/bin/php-cgi

# PID dosyasının yeri
PHP_PID=/tmp/php.pid

# Dinlenecek adres
#FCGI_BIND_ADDRESS=10.0.1.1:10000
# Dinlenecek soket
FCGI_BIND_ADDRESS=/tmp/php.sock

PHP_FCGI_CHILDREN=16
PHP_FCGI_MAX_REQUESTS=10000

env -i PHP_FCGI_CHILDREN=$PHP_FCGI_CHILDREN \
       PHP_FCGI_MAX_REQUESTS=$PHP_FCGI_MAX_REQUESTS \
       $PHP -b $FCGI_BIND_ADDRESS &

echo $! > "$PHP_PID"

]]>
   </screen>
  </example>
 </sect2>

 <sect2 xml:id="install.unix.lighttpd-14.remote-fcgi">
  <title>Uzak FCGI (nesnel) örneklerine bağlanmak</title>

  <para>
   Uygulamaları dengelemek için Fastcgi örnekleri çok sayıda uzak makineye
   çatallanabilir.
  </para>

  <example>
   <title>- Uzak FCGI örneklerine bağlanmak</title>
   <screen>
<![CDATA[
fastcgi.server = ( ".php" =>
   (( "host" => "10.0.0.2", "port" => 1030 ),
    ( "host" => "10.0.0.3", "port" => 1030 ))
)
]]>
   </screen>
  </example>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
